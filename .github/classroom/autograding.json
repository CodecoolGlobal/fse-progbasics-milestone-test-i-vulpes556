{
    "tests": [
      {
        "name": "should return the average age of all users - only adults, over 18s",
        "setup": "npm install",
        "run": "npm run test -- -t 'should return the average age of all users - only adults, over 18s'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "should return the average age of all users - one adult, one at 18 yo exactly",
        "setup": "npm install",
        "run": "npm run test -- -t 'should return the average age of all users - one adult, one at 18 yo exactly'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "should return the average age of all users - two at 18 yo exactly",
        "setup": "npm install",
        "run": "npm run test -- -t 'should return the average age of all users - two at 18 yo exactly'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "should return the average age of all users - two adults, two underages",
        "setup": "npm install",
        "run": "npm run test -- -t 'should return the average age of all users - two adults, two underages'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "should return the average age of all users - all underage",
        "setup": "npm install",
        "run": "npm run test -- -t 'should return the average age of all users - all underage'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "It should return 0, if the array is empty",
        "setup": "npm install",
        "run": "npm run test -- -t 'It should return 0, if the array is empty'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "It should return 0, if the array contains only non confirmed users",
        "setup": "npm install",
        "run": "npm run test -- -t 'It should return 0, if the array contains only non confirmed users'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "It should return 1, if the array contain only 1, confimred user",
        "setup": "npm install",
        "run": "npm run test -- -t 'It should return 1, if the array contain only 1, confimred user'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "It should return 3, if the array contains 3 confirmed users",
        "setup": "npm install",
        "run": "npm run test -- -t 'It should return 3, if the array contains 3 confirmed users'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "It should return 2, if the array contains 2 confirmed and 1 non confirmed users",
        "setup": "npm install",
        "run": "npm run test -- -t 'It should return 2, if the array contains 2 confirmed and 1 non confirmed users'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "number is 3 and all numbers are divisible by 3",
        "setup": "npm install",
        "run": "npm run test -- -t 'number is 3 and all numbers are divisible by 3'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "number is 2 and not all numbers are divisible by 2",
        "setup": "npm install",
        "run": "npm run test -- -t 'number is 2 and not all numbers are divisible by 2'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "number is 10 and none of the numbers are divisible by 10",
        "setup": "npm install",
        "run": "npm run test -- -t 'number is 10 and none of the numbers are divisible by 10'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "number is 0 and it should return null",
        "setup": "npm install",
        "run": "npm run test -- -t 'number is 0 and it should return null'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "number is 2 and the array is empty",
        "setup": "npm install",
        "run": "npm run test -- -t 'number is 2 and the array is empty'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "number is 6 and there are numbers divisible by 6",
        "setup": "npm install",
        "run": "npm run test -- -t 'number is 6 and there are numbers divisible by 6'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "3 objects, should return 1",
        "setup": "npm install",
        "run": "npm run test -- -t '3 objects, should return 1'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "3 objects, should return 2",
        "setup": "npm install",
        "run": "npm run test -- -t '3 objects, should return 2'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "2 objects, should return null",
        "setup": "npm install",
        "run": "npm run test -- -t '2 objects, should return null'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "0 objects, should return null",
        "setup": "npm install",
        "run": "npm run test -- -t '0 objects, should return null'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      },
      {
        "name": "2 objects, one has Abacus false, should return 1",
        "setup": "npm install",
        "run": "npm run test -- -t '2 objects, one has Abacus false, should return 1'",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 10
      }
    ]
  }

  
  
  
  
  
  

  
  
  
  
 
  
  
  
 
  
  